% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xxprobm.R
\name{xxprobm}
\alias{xxprobm}
\title{Probability of a set of transitions under neutral theory}
\usage{
xxprobm(log10Jm, occs, ages, sampled = TRUE, generationtime = 1)
}
\arguments{
\item{log10Jm}{a 2-length vector containing log10 J (community size) and log10 m
(migration rate). Easier for fitJm() to optimize in log space. optim() wants a
single vector of params.}

\item{occs}{matrix of the number of observations in each species at each time.
One column for each species, one row for each time slice. Time goes from oldest
at the bottom to youngest at the top.}

\item{ages}{vector containing the ages of each time slice, in years, from
oldest to youngest.}

\item{sampled}{boolean indicating whether occs represents a sampled
community (TRUE) or instead represents true species abundances (FALSE).}

\item{generationtime}{time between generations, in years.}
}
\value{
loglik value.
}
\description{
Gives the likelihood of a community composition timeseries under Hubbell's
neutral theory for a given value of J. Unlike its helper function xprob,
xxprob takes data in the form of the number of individuals observed in each
species, rather than relative abundances. Can take either a single dataset or
a list of them.
}
\details{
Assumes non-overlapping generations. Because the user supplies the ages of each
time slice, the function needs to be given a generation time to know how many
generations separate each adjacent pair of time slices. Default is 1 year.
}
\examples{
library(comprehenr)
set.seed(10)
sim <- simNT(c(1000,1000,1000,1000),ts=seq(0,2000,50),m=0.005,ss=10000) #simulate under neutral theory with migration
par(mfrow=c(1,2))
plot_spindles(occs=sim$simulation,ages=sim$times,plot.ss=FALSE)
#plot likelihood surface for migration rate
ms <- seq(-7,-1,0.1) #get likelihood for these values of m
plot(10**ms,comprehenr::to_vec(for(i in ms) xxprobm(log10Jm = c(log10(4000),i),occs=sim$simulation,ages=sim$times,sampled=TRUE)),ylim=c(100,300),xlab="m",ylab="loglik",type='l',log='x')
lines(c(0.005,0.005),c(0,400),lty='dashed') #true m
}
