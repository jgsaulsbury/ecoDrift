% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_Js.R
\name{plot_Js}
\alias{plot_Js}
\title{Plot fitted J values for every transition in a single timeseries}
\usage{
plot_Js(
  occs,
  ages,
  xlim = NULL,
  linesevery = NA,
  sampled = TRUE,
  generationtime = 1,
  searchinterval = c(1, 9),
  ...
)
}
\arguments{
\item{occs}{matrix of the number of observations in each species at each time.
One column for each species, one row for each time slice. Time goes from oldest
at the bottom to youngest at the top.}

\item{ages}{vector containing the ages of each time slice, in years, from
oldest to youngest.}

\item{xlim}{vector of length 2 giving the left and right bounds of the x axis.}

\item{linesevery}{value indicating the interval at which to draw horizontal gridlines.
Default is NA (don't draw them).}

\item{generationtime}{passed to fitJ().}

\item{searchinterval}{passed to fitJ()}

\item{...}{additional plotting parameters passed to plot().}
}
\value{
plots rate through time.
}
\description{
Use to visualize how the rate of turnover changes across a community change
timeseries.
}
\examples{
#simulate a timeseries with an increase in J halfway through
J1 <- 1000 #first half of TS
J2 <- 10000 #second half of TS
tslength <- 500
every <- 5
nsp <- 8
ss <- 1000000
ages <- seq(0,tslength,every)
timeseries1 <- simNT(startingabs=rep(J1/nsp,nsp),ts=ages[1:(length(ages)/2 + 1)],ss=ss)$simulation #first half
timeseries2 <- simNT(startingabs=timeseries1[1,]*J2/ss,ts=ages[1:(length(ages)/2 + 1)],ss=ss)$simulation #second half
timeseries <- rbind(timeseries2,timeseries1[-1,])
par(mfrow=c(1,2))
plot_spindles(timeseries,ages)
lines(c(-1,10),c(tslength/2,tslength/2),lty='dashed',lwd=2) #plot point where J switches
plot_Js(timeseries,ages) #fit rate through time
lines(c(1E-10,1E-1),c(tslength/2,tslength/2),lty='dashed',lwd=2)
}
